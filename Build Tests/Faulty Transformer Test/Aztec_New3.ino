#include <digitalWriteFast.h>

#define DEBUG false

#define sL7 2
#define sS7 0

#define sL8 2
#define sS8 0

#define sL9 2
#define sS9 0

#define sL10 1400
#define sS10 0

#define sL11 2
#define sS11 00

#define sL12 2
#define sS12 0

#define sL0 2
#define sS0 0

#define sL1 2
#define sS1 0

#define sL3 2
#define sS3 0

#define sL4 2
#define sS4 0

#define sL5 2
#define sS5 0

#define sL6 2
#define sS6 0

#define sL13 2
#define sS13 0

// DO - A
// D1 - B,C
// D3 - D
// D4 - G,H
// D5 - I
// D6 - M
// D7 - N
// D8 - L
// D9 - K
// D10 - E,F
// D11 - J1
// D12 - J



const byte s7[] PROGMEM  = { 190,190 };


const byte s8[] PROGMEM  = { 190,190 };

const byte s9[] PROGMEM = { 190,190 };

const byte s10[] PROGMEM  = {255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,254 ,254 ,254 ,254 ,254 ,253 ,253 ,253 ,253 ,252 ,252 ,252 ,251 ,251 ,251 ,250 ,250 ,250 ,249 ,249 ,248 ,248 ,247 ,247 ,247 ,246 ,246 ,245 ,245 ,244 ,244 ,243 ,242 ,242 ,241 ,241 ,240 ,240 ,239 ,238 ,238 ,237 ,236 ,236 ,235 ,234 ,234 ,233 ,232 ,232 ,231 ,230 ,229 ,229 ,228 ,227 ,226 ,226 ,225 ,224 ,223 ,223 ,222 ,221 ,220 ,219 ,218 ,218 ,217 ,216 ,215 ,214 ,213 ,213 ,212 ,211 ,210 ,209 ,208 ,208 ,207 ,206 ,205 ,204 ,203 ,202 ,201 ,201 ,200 ,199 ,198 ,197 ,196 ,195 ,195 ,194 ,193 ,192 ,191 ,190 ,189 ,188 ,188 ,187 ,186 ,185 ,184 ,183 ,183 ,182 ,181 ,180 ,179 ,179 ,178 ,177 ,176 ,175 ,175 ,174 ,173 ,172 ,172 ,171 ,170 ,170 ,169 ,168 ,167 ,167 ,166 ,165 ,165 ,164 ,163 ,163 ,162 ,162 ,161 ,160 ,160 ,159 ,159 ,158 ,158 ,157 ,157 ,156 ,156 ,155 ,155 ,154 ,154 ,154 ,153 ,153 ,152 ,152 ,152 ,151 ,151 ,151 ,151 ,150 ,150 ,150 ,150 ,149 ,149 ,149 ,149 ,149 ,149 ,149 ,149 ,149 ,148 ,148 ,148 ,148 ,148 ,148 ,149 ,149 ,149 ,149 ,149 ,149 ,149 ,149 ,150 ,150 ,150 ,150 ,151 ,151 ,151 ,152 ,152 ,152 ,153 ,153 ,154 ,154 ,154 ,155 ,155 ,156 ,157 ,157 ,158 ,158 ,159 ,160 ,160 ,161 ,162 ,162 ,163 ,164 ,165 ,165 ,166 ,167 ,168 ,169 ,170 ,170 ,171 ,172 ,173 ,174 ,175 ,176 ,177 ,178 ,179 ,181 ,182 ,183 ,184 ,185 ,186 ,187 ,189 ,190 ,191 ,192 ,194 ,195 ,196 ,198 ,199 ,200 ,202 ,203 ,205 ,206 ,207 ,209 ,210 ,212 ,213 ,215 ,216 ,218 ,220 ,221 ,223 ,224 ,226 ,228 ,229 ,231 ,233 ,234 ,236 ,238 ,239 ,241 ,243 ,245 ,246 ,248 ,250 ,252 ,254 ,249 ,255 ,254 ,252 ,250 ,248 ,246 ,244 ,242 ,241 ,239 ,237 ,235 ,233 ,231 ,229 ,227 ,225 ,223 ,221 ,219 ,217 ,215 ,213 ,211 ,209 ,207 ,205 ,203 ,201 ,199 ,197 ,195 ,193 ,191 ,189 ,187 ,185 ,183 ,181 ,179 ,177 ,175 ,173 ,171 ,169 ,167 ,165 ,163 ,161 ,159 ,157 ,155 ,153 ,151 ,149 ,147 ,145 ,143 ,141 ,139 ,137 ,135 ,134 ,132 ,130 ,128 ,126 ,124 ,122 ,120 ,118 ,117 ,115 ,113 ,111 ,109 ,108 ,106 ,104 ,102 ,101 ,99 ,97 ,95 ,94 ,92 ,90 ,89 ,87 ,85 ,84 ,82 ,81 ,79 ,78 ,76 ,75 ,73 ,72 ,70 ,69 ,67 ,66 ,65 ,63 ,62 ,61 ,59 ,58 ,57 ,55 ,54 ,53 ,52 ,51 ,50 ,48 ,47 ,46 ,45 ,44 ,43 ,42 ,41 ,40 ,39 ,38 ,38 ,37 ,36 ,35 ,34 ,34 ,33 ,32 ,32 ,31 ,30 ,30 ,29 ,29 ,28 ,28 ,27 ,27 ,26 ,26 ,25 ,25 ,25 ,24 ,24 ,24 ,24 ,24 ,23 ,23 ,23 ,23 ,23 ,23 ,23 ,23 ,23 ,23 ,23 ,24 ,24 ,24 ,24 ,25 ,25 ,25 ,25 ,26 ,26 ,27 ,27 ,28 ,28 ,29 ,29 ,30 ,30 ,31 ,32 ,33 ,33 ,34 ,35 ,36 ,36 ,37 ,38 ,39 ,40 ,41 ,42 ,43 ,44 ,45 ,46 ,48 ,49 ,50 ,51 ,52 ,54 ,55 ,56 ,58 ,59 ,60 ,62 ,63 ,65 ,66 ,68 ,69 ,71 ,72 ,74 ,76 ,77 ,79 ,81 ,82 ,84 ,86 ,88 ,90 ,91 ,93 ,95 ,97 ,99 ,101 ,103 ,105 ,107 ,109 ,111 ,113 ,115 ,117 ,119 ,121 ,124 ,126 ,128 ,130 ,132 ,135 ,137 ,139 ,141 ,144 ,146 ,148 ,151 ,153 ,155 ,158 ,160 ,163 ,165 ,168 ,170 ,172 ,175 ,177 ,180 ,182 ,185 ,187 ,190 ,193 ,195 ,198 ,200 ,203 ,205 ,208 ,211 ,213 ,216 ,218 ,221 ,224 ,226 ,229 ,232 ,234 ,237 ,240 ,242 ,245 ,248 ,250 ,253 ,254 ,255 ,253 ,250 ,248 ,245 ,242 ,240 ,237 ,234 ,232 ,229 ,226 ,224 ,221 ,218 ,216 ,213 ,210 ,208 ,205 ,202 ,200 ,197 ,195 ,192 ,190 ,187 ,184 ,182 ,179 ,177 ,174 ,172 ,169 ,167 ,164 ,162 ,159 ,157 ,154 ,152 ,149 ,147 ,145 ,142 ,140 ,138 ,135 ,133 ,131 ,128 ,126 ,124 ,122 ,119 ,117 ,115 ,113 ,111 ,108 ,106 ,104 ,102 ,100 ,98 ,96 ,94 ,92 ,90 ,88 ,86 ,84 ,82 ,80 ,79 ,77 ,75 ,73 ,71 ,70 ,68 ,66 ,65 ,63 ,61 ,60 ,58 ,57 ,55 ,54 ,52 ,51 ,49 ,48 ,46 ,45 ,44 ,43 ,41 ,40 ,39 ,38 ,36 ,35 ,34 ,33 ,32 ,31 ,30 ,29 ,28 ,27 ,26 ,25 ,25 ,24 ,23 ,22 ,22 ,21 ,20 ,20 ,19 ,18 ,18 ,17 ,17 ,16 ,16 ,15 ,15 ,15 ,14 ,14 ,14 ,14 ,13 ,13 ,13 ,13 ,13 ,13 ,13 ,13 ,13 ,13 ,13 ,13 ,13 ,13 ,13 ,14 ,14 ,14 ,14 ,15 ,15 ,15 ,16 ,16 ,17 ,17 ,18 ,18 ,19 ,20 ,20 ,21 ,21 ,22 ,23 ,24 ,24 ,25 ,26 ,27 ,28 ,29 ,30 ,31 ,32 ,33 ,34 ,35 ,36 ,37 ,38 ,39 ,40 ,42 ,43 ,44 ,45 ,47 ,48 ,49 ,51 ,52 ,53 ,55 ,56 ,58 ,59 ,61 ,62 ,64 ,65 ,67 ,68 ,70 ,72 ,73 ,75 ,77 ,78 ,80 ,82 ,83 ,85 ,87 ,89 ,91 ,92 ,94 ,96 ,98 ,100 ,102 ,104 ,106 ,107 ,109 ,111 ,113 ,115 ,117 ,119 ,121 ,123 ,125 ,127 ,129 ,131 ,134 ,136 ,138 ,140 ,142 ,144 ,146 ,148 ,150 ,152 ,155 ,157 ,159 ,161 ,163 ,165 ,167 ,170 ,172 ,174 ,176 ,178 ,181 ,183 ,185 ,187 ,189 ,191 ,194 ,196 ,198 ,200 ,202 ,204 ,207 ,209 ,211 ,213 ,215 ,217 ,220 ,222 ,224 ,226 ,228 ,230 ,233 ,235 ,237 ,239 ,241 ,243 ,245 ,247 ,249 ,251 ,253 ,248 ,255 ,253 ,251 ,249 ,247 ,245 ,243 ,241 ,239 ,237 ,236 ,234 ,232 ,230 ,228 ,226 ,224 ,222 ,220 ,218 ,217 ,215 ,213 ,211 ,209 ,208 ,206 ,204 ,203 ,201 ,199 ,197 ,196 ,194 ,193 ,191 ,189 ,188 ,186 ,185 ,183 ,182 ,180 ,179 ,177 ,176 ,174 ,173 ,172 ,170 ,169 ,168 ,166 ,165 ,164 ,162 ,161 ,160 ,159 ,158 ,157 ,155 ,154 ,153 ,152 ,151 ,150 ,149 ,148 ,147 ,146 ,145 ,144 ,143 ,142 ,142 ,141 ,140 ,139 ,138 ,138 ,137 ,136 ,136 ,135 ,134 ,134 ,133 ,132 ,132 ,131 ,131 ,130 ,130 ,129 ,129 ,129 ,128 ,128 ,127 ,127 ,127 ,126 ,126 ,126 ,126 ,125 ,125 ,125 ,125 ,125 ,125 ,125 ,125 ,124 ,124 ,124 ,124 ,124 ,124 ,125 ,125 ,125 ,125 ,125 ,125 ,125 ,125 ,126 ,126 ,126 ,126 ,127 ,127 ,127 ,128 ,128 ,128 ,129 ,129 ,129 ,130 ,130 ,131 ,131 ,132 ,132 ,133 ,133 ,134 ,134 ,135 ,135 ,136 ,137 ,137 ,138 ,139 ,139 ,140 ,141 ,141 ,142 ,143 ,144 ,144 ,145 ,146 ,147 ,147 ,148 ,149 ,150 ,151 ,151 ,152 ,153 ,154 ,155 ,156 ,157 ,158 ,158 ,159 ,160 ,161 ,162 ,163 ,164 ,165 ,166 ,167 ,168 ,169 ,170 ,171 ,172 ,173 ,174 ,175 ,176 ,177 ,178 ,179 ,180 ,181 ,182 ,183 ,184 ,185 ,186 ,187 ,188 ,189 ,190 ,191 ,192 ,193 ,194 ,195 ,196 ,197 ,198 ,199 ,200 ,201 ,202 ,203 ,204 ,205 ,206 ,207 ,208 ,209 ,210 ,211 ,212 ,213 ,214 ,215 ,216 ,217 ,218 ,218 ,219 ,220 ,221 ,222 ,223 ,224 ,225 ,226 ,226 ,227 ,228 ,229 ,230 ,231 ,231 ,232 ,233 ,234 ,235 ,235 ,236 ,237 ,238 ,238 ,239 ,240 ,240 ,241 ,242 ,242 ,243 ,244 ,244 ,245 ,245 ,246 ,247 ,247 ,248 ,248 ,249 ,249 ,250 ,250 ,251 ,251 ,252 ,252 ,253 ,253 ,253 ,254 ,254 ,254 ,255 ,255 ,254 ,255 ,255 ,255 ,255 ,254 ,254 ,254 ,254 ,253 ,253 ,253 ,253 ,253 ,253 ,253 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,252 ,253 ,253 ,253 ,253 ,253 ,253 ,254 ,254 ,254 ,254 ,254 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255 ,255};

const byte s11[] PROGMEM  = { 190,190 };

const byte s12[] PROGMEM  = { 190,190 };


const byte s0[] PROGMEM  = { 190,190 };

const byte s1[] PROGMEM  = { 190,190 };

const byte s3[] PROGMEM  = { 190,190 };

const byte s4[] PROGMEM  = { 190,190 };

const byte s5[] PROGMEM = { 190,190 };

const byte s6[] PROGMEM = { 190,190 };

const byte s13[] PROGMEM  = { 220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,219 ,218 ,218 ,217 ,216 ,216 ,215 ,214 ,214 ,213 ,212 ,212 ,211 ,210 ,210 ,209 ,208 ,208 ,207 ,206 ,206 ,205 ,204 ,204 ,203 ,202 ,202 ,201 ,201 ,200 ,199 ,199 ,198 ,197 ,197 ,196 ,195 ,195 ,194 ,193 ,193 ,192 ,191 ,191 ,190 ,190 ,189 ,188 ,188 ,187 ,186 ,186 ,185 ,184 ,184 ,183 ,182 ,182 ,181 ,181 ,180 ,179 ,179 ,178 ,177 ,177 ,176 ,175 ,175 ,174 ,174 ,173 ,172 ,172 ,171 ,170 ,170 ,169 ,168 ,168 ,167 ,167 ,166 ,165 ,165 ,164 ,163 ,163 ,162 ,162 ,161 ,160 ,160 ,159 ,159 ,158 ,157 ,157 ,156 ,155 ,155 ,154 ,154 ,153 ,152 ,152 ,151 ,151 ,150 ,149 ,149 ,148 ,148 ,147 ,146 ,146 ,145 ,145 ,144 ,143 ,143 ,142 ,142 ,141 ,140 ,140 ,139 ,139 ,138 ,137 ,137 ,136 ,136 ,135 ,134 ,134 ,133 ,133 ,132 ,131 ,131 ,130 ,130 ,129 ,129 ,128 ,127 ,127 ,126 ,126 ,125 ,125 ,124 ,123 ,123 ,122 ,122 ,121 ,121 ,120 ,119 ,119 ,118 ,118 ,117 ,117 ,116 ,115 ,115 ,114 ,114 ,113 ,113 ,112 ,112 ,111 ,111 ,110 ,109 ,109 ,108 ,108 ,107 ,107 ,106 ,106 ,105 ,105 ,104 ,103 ,103 ,102 ,102 ,101 ,101 ,100 ,100 ,99 ,99 ,98 ,98 ,97 ,97 ,96 ,96 ,95 ,95 ,94 ,93 ,93 ,92 ,92 ,91 ,91 ,90 ,90 ,89 ,89 ,88 ,88 ,87 ,87 ,86 ,86 ,85 ,85 ,84 ,84 ,83 ,83 ,82 ,82 ,81 ,81 ,80 ,80 ,79 ,79 ,79 ,78 ,78 ,77 ,77 ,76 ,76 ,75 ,75 ,74 ,74 ,73 ,73 ,72 ,72 ,71 ,71 ,71 ,70 ,70 ,69 ,69 ,68 ,68 ,67 ,67 ,66 ,66 ,66 ,65 ,65 ,64 ,64 ,63 ,63 ,62 ,62 ,62 ,61 ,61 ,60 ,60 ,59 ,59 ,59 ,58 ,58 ,57 ,57 ,56 ,56 ,56 ,55 ,55 ,54 ,54 ,54 ,53 ,53 ,52 ,52 ,52 ,51 ,51 ,50 ,50 ,50 ,49 ,49 ,48 ,48 ,48 ,47 ,47 ,46 ,46 ,46 ,45 ,45 ,45 ,44 ,44 ,43 ,43 ,43 ,42 ,42 ,42 ,41 ,41 ,41 ,40 ,40 ,39 ,39 ,39 ,38 ,38 ,38 ,37 ,37 ,37 ,36 ,36 ,36 ,35 ,35 ,35 ,34 ,34 ,34 ,33 ,33 ,33 ,32 ,32 ,32 ,31 ,31 ,31 ,30 ,30 ,30 ,30 ,29 ,29 ,29 ,28 ,28 ,28 ,27 ,27 ,27 ,27 ,26 ,26 ,26 ,25 ,25 ,25 ,24 ,24 ,24 ,24 ,23 ,23 ,23 ,23 ,22 ,22 ,22 ,21 ,21 ,21 ,21 ,20 ,20 ,20 ,20 ,19 ,19 ,19 ,19 ,18 ,18 ,18 ,18 ,17 ,17 ,17 ,17 ,16 ,16 ,16 ,16 ,16 ,15 ,15 ,15 ,15 ,14 ,14 ,14 ,14 ,14 ,13 ,13 ,13 ,13 ,13 ,12 ,12 ,12 ,12 ,12 ,11 ,11 ,11 ,11 ,11 ,10 ,10 ,10 ,10 ,10 ,10 ,9 ,9 ,9 ,9 ,9 ,9 ,8 ,8 ,8 ,8 ,8 ,8 ,7 ,7 ,7 ,7 ,7 ,7 ,6 ,6 ,6 ,6 ,6 ,6 ,6 ,6 ,5 ,5 ,5 ,5 ,5 ,5 ,5 ,5 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,0 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,4 ,5 ,5 ,5 ,5 ,5 ,5 ,5 ,5 ,6 ,6 ,6 ,6 ,6 ,6 ,6 ,6 ,7 ,7 ,7 ,7 ,7 ,7 ,8 ,8 ,8 ,8 ,8 ,8 ,9 ,9 ,9 ,9 ,9 ,9 ,10 ,10 ,10 ,10 ,10 ,10 ,11 ,11 ,11 ,11 ,11 ,12 ,12 ,12 ,12 ,12 ,13 ,13 ,13 ,13 ,13 ,14 ,14 ,14 ,14 ,14 ,15 ,15 ,15 ,15 ,16 ,16 ,16 ,16 ,16 ,17 ,17 ,17 ,17 ,18 ,18 ,18 ,18 ,19 ,19 ,19 ,19 ,20 ,20 ,20 ,20 ,21 ,21 ,21 ,21 ,22 ,22 ,22 ,23 ,23 ,23 ,23 ,24 ,24 ,24 ,24 ,25 ,25 ,25 ,26 ,26 ,26 ,27 ,27 ,27 ,27 ,28 ,28 ,28 ,29 ,29 ,29 ,30 ,30 ,30 ,30 ,31 ,31 ,31 ,32 ,32 ,32 ,33 ,33 ,33 ,34 ,34 ,34 ,35 ,35 ,35 ,36 ,36 ,36 ,37 ,37 ,37 ,38 ,38 ,38 ,39 ,39 ,39 ,40 ,40 ,41 ,41 ,41 ,42 ,42 ,42 ,43 ,43 ,43 ,44 ,44 ,45 ,45 ,45 ,46 ,46 ,46 ,47 ,47 ,48 ,48 ,48 ,49 ,49 ,50 ,50 ,50 ,51 ,51 ,52 ,52 ,52 ,53 ,53 ,54 ,54 ,54 ,55 ,55 ,56 ,56 ,56 ,57 ,57 ,58 ,58 ,59 ,59 ,59 ,60 ,60 ,61 ,61 ,62 ,62 ,62 ,63 ,63 ,64 ,64 ,65 ,65 ,66 ,66 ,66 ,67 ,67 ,68 ,68 ,69 ,69 ,70 ,70 ,71 ,71 ,71 ,72 ,72 ,73 ,73 ,74 ,74 ,75 ,75 ,76 ,76 ,77 ,77 ,78 ,78 ,79 ,79 ,79 ,80 ,80 ,81 ,81 ,82 ,82 ,83 ,83 ,84 ,84 ,85 ,85 ,86 ,86 ,87 ,87 ,88 ,88 ,89 ,89 ,90 ,90 ,91 ,91 ,92 ,92 ,93 ,93 ,94 ,95 ,95 ,96 ,96 ,97 ,97 ,98 ,98 ,99 ,99 ,100 ,100 ,101 ,101 ,102 ,102 ,103 ,103 ,104 ,105 ,105 ,106 ,106 ,107 ,107 ,108 ,108 ,109 ,109 ,110 ,111 ,111 ,112 ,112 ,113 ,113 ,114 ,114 ,115 ,115 ,116 ,117 ,117 ,118 ,118 ,119 ,119 ,120 ,121 ,121 ,122 ,122 ,123 ,123 ,124 ,125 ,125 ,126 ,126 ,127 ,127 ,128 ,129 ,129 ,130 ,130 ,131 ,131 ,132 ,133 ,133 ,134 ,134 ,135 ,136 ,136 ,137 ,137 ,138 ,139 ,139 ,140 ,140 ,141 ,142 ,142 ,143 ,143 ,144 ,145 ,145 ,146 ,146 ,147 ,148 ,148 ,149 ,149 ,150 ,151 ,151 ,152 ,152 ,153 ,154 ,154 ,155 ,155 ,156 ,157 ,157 ,158 ,159 ,159 ,160 ,160 ,161 ,162 ,162 ,163 ,163 ,164 ,165 ,165 ,166 ,167 ,167 ,168 ,168 ,169 ,170 ,170 ,171 ,172 ,172 ,173 ,174 ,174 ,175 ,175 ,176 ,177 ,177 ,178 ,179 ,179 ,180 ,181 ,181 ,182 ,182 ,183 ,184 ,184 ,185 ,186 ,186 ,187 ,188 ,188 ,189 ,190 ,190 ,191 ,191 ,192 ,193 ,193 ,194 ,195 ,195 ,196 ,197 ,197 ,198 ,199 ,199 ,200 ,201 ,201 ,202 ,202 ,203 ,204 ,204 ,205 ,206 ,206 ,207 ,208 ,208 ,209 ,210 ,210 ,211 ,212 ,212 ,213 ,214 ,214 ,215 ,216 ,216 ,217 ,218 ,218 ,219 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 ,220 };

int sP0 = sS0;
int sP1 = sS1;
int sP3 = sS3;
int sP4 = sS4;
int sP5 = sS5;
int sP6 = sS6;
int sP7 = sS7;
int sP8 = sS8;
int sP9 = sS9;
int sP10 = sS10;
int sP11 = sS11;
int sP12 = sS12;
int sP13 = sS13;

int d=0;

int stepTime = 11;
int initDelay = 800;

long crossTime;
boolean crossed=false;

void setup(){
	pinMode(2, INPUT);
	pinMode(0, OUTPUT);
	pinMode(1, OUTPUT);
	pinMode(3, OUTPUT);
	pinMode(4, OUTPUT);
	pinMode(5, OUTPUT);
	pinMode(6, OUTPUT);
	pinMode(7, OUTPUT);
	pinMode(8, OUTPUT);
	pinMode(9, OUTPUT);
	pinMode(10, OUTPUT);
	pinMode(11, OUTPUT);
	pinMode(12, OUTPUT);
	pinMode(13, OUTPUT);
}

void loop(){
	if (!digitalRead(2) || DEBUG){
		if (!crossed || DEBUG){

			if (DEBUG) digitalWriteFast2(13, HIGH);
			
			// init delay
			crossTime = micros();
			while (micros() - crossTime < initDelay){   }
			
			if (DEBUG) digitalWriteFast2(13, LOW);
			zeroCross();
			crossed = true;
		}
		} else {
		crossed = false;
	}
}

void zeroCross(){

	// ONE PULSE DIVIDED INTO 255
	for (int i=0;i<256;i++){
		if (i==pgm_read_byte(&s0[sP0])){
			digitalWriteFast2(0, HIGH);
		}
		if (i==pgm_read_byte(&s1[sP1])){
			digitalWriteFast2(1, HIGH);
		}
		if (i==pgm_read_byte(&s3[sP3])){
			digitalWriteFast2(3, HIGH);
		}
		if (i==pgm_read_byte(&s4[sP4])){
			digitalWriteFast2(4, HIGH);
		}
		if (i==pgm_read_byte(&s5[sP5])){
			digitalWriteFast2(5, HIGH);
		}
		if (i==pgm_read_byte(&s6[sP6])){
			digitalWriteFast2(6, HIGH);
		}
		if (i==pgm_read_byte(&s7[sP7])){
			digitalWriteFast2(7, HIGH);
		}
		if (i==pgm_read_byte(&s8[sP8])){
			digitalWriteFast2(8, HIGH);
		}
		if (i==pgm_read_byte(&s9[sP9])){
			digitalWriteFast2(9, HIGH);
		}
		if (i==pgm_read_byte(&s10[sP10])){
			digitalWriteFast2(10, HIGH);
		}
		if (i==pgm_read_byte(&s11[sP11])){
			digitalWriteFast2(11, HIGH);
		}
		if (i==pgm_read_byte(&s12[sP12])){
			digitalWriteFast2(12, HIGH);
		}
		if (i==pgm_read_byte(&s13[sP13])){
			digitalWriteFast2(13, HIGH);
		}
		crossTime = micros();
		while (micros() - crossTime < stepTime){   }
	}
	// END -ONE PULSE DIVIDED INTO 255
	
	// delay for on time
	crossTime = micros();
	while (micros() - crossTime < 100){   }

	// switch all off
	digitalWriteFast2(0, LOW);
	digitalWriteFast2(1, LOW);
	digitalWriteFast2(3, LOW);
	digitalWriteFast2(4, LOW);
	digitalWriteFast2(5, LOW);
	digitalWriteFast2(6, LOW);
	digitalWriteFast2(7, LOW);
	digitalWriteFast2(8, LOW);
	digitalWriteFast2(9, LOW);
	digitalWriteFast2(10, LOW);
	digitalWriteFast2(11, LOW);
	digitalWriteFast2(12, LOW);
	digitalWriteFast2(13, LOW);

	if (d==0){
		sP0++;
		sP1++;
		sP3++;
		sP4++;
		sP5++;
		sP6++;
		sP7++;
	}
	if (d==1){
		sP8++;
		sP9++;
		sP10++;
		sP11++;
		sP12++;
		sP13++;
	}

	if (sP0==sL0) sP0=0;
	if (sP1==sL1) sP1=0;
	if (sP3==sL3) sP3=0;
	if (sP4==sL4) sP4=0;
	if (sP5==sL5) sP5=0;
	if (sP6==sL6) sP6=0;
	if (sP7==sL7) sP7=0;
	if (sP8==sL8) sP8=0;
	if (sP9==sL9) sP9=0;
	if (sP10==sL10) sP10=0;
	if (sP11==sL11) sP11=0;
	if (sP12==sL12) sP12=0;
	if (sP13==sL13) sP13=0;

	d++;
	if (d==2) d=0;
}
